[{"C:\\old things\\apps\\my-app\\src\\index.tsx":"1","C:\\old things\\apps\\my-app\\src\\reportWebVitals.ts":"2","C:\\old things\\apps\\my-app\\src\\App.tsx":"3","C:\\old things\\apps\\my-app\\src\\Componant\\LandingPage.tsx":"4","C:\\old things\\apps\\my-app\\src\\Componant\\Nav.tsx":"5","C:\\old things\\apps\\my-app\\src\\Componant\\StorePage.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":270,"mtime":1612058262416,"results":"10","hashOfConfig":"8"},{"size":1373,"mtime":1612058238450,"results":"11","hashOfConfig":"8"},{"size":4139,"mtime":1611883537614,"results":"12","hashOfConfig":"8"},{"size":1641,"mtime":1612065853126,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"v9ukxa",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\old things\\apps\\my-app\\src\\index.tsx",[],["28","29"],"C:\\old things\\apps\\my-app\\src\\reportWebVitals.ts",[],"C:\\old things\\apps\\my-app\\src\\App.tsx",["30"],"C:\\old things\\apps\\my-app\\src\\Componant\\LandingPage.tsx",[],"C:\\old things\\apps\\my-app\\src\\Componant\\Nav.tsx",["31"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./nav.css\";\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\n\r\ninterface sections {\r\n  name: string;\r\n  id: number;\r\n}\r\ninterface props {\r\n  border: boolean;\r\n}\r\n\r\nexport default function Nav({ border }: props) {\r\n  const [selecter, setSelecter] = useState<string>(\"\");\r\n  const [navColor, setNavColor] = useState<boolean>(false);\r\n\r\n  const man: sections[] = [\r\n    { name: \"Shirts\", id: 1 },\r\n    { name: \"Jeans\", id: 2 },\r\n    { name: \"Jackets \", id: 3 },\r\n    { name: \"Boots \", id: 4 },\r\n  ];\r\n\r\n  const woman: sections[] = [\r\n    { name: \"Shirts\", id: 1 },\r\n    { name: \"Jeans\", id: 2 },\r\n    { name: \"Jackets \", id: 3 },\r\n    { name: \"Booots \", id: 4 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const navScroll = () => {\r\n      if (window.scrollY > 100) {\r\n        setNavColor(true);\r\n      } else {\r\n        setNavColor(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"scroll\", navScroll);\r\n\r\n    return () => {\r\n      if (window) window.removeEventListener(\"scroll\", navScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        !border ? \"nav\" : `nav nav_border ${navColor && \"nav_scrollColor\"} `\r\n      }\r\n    >\r\n      <div className=\"nav_logo\">\r\n        <span>Brand</span>\r\n        <span>O</span>\r\n        <span>ne </span>\r\n      </div>\r\n      <div className=\"nav_right\">\r\n        <div className=\"nav_list\">\r\n          <input\r\n            onClick={() => {\r\n              setSelecter(\"man\");\r\n            }}\r\n            className=\"list_checkbox\"\r\n            type=\"radio\"\r\n            id=\"man\"\r\n            name=\"slid\"\r\n          ></input>\r\n          <label htmlFor=\"man\">Man</label>\r\n          <input\r\n            onClick={() => {\r\n              setSelecter(\"woman\");\r\n            }}\r\n            className=\"list_checkbox\"\r\n            type=\"radio\"\r\n            id=\"woman\"\r\n            name=\"slid\"\r\n          ></input>\r\n          <label htmlFor=\"woman\">Woman</label>\r\n          <label>Explore</label>\r\n\r\n          <input\r\n            className=\"list_checkbox\"\r\n            type=\"radio\"\r\n            id=\"close\"\r\n            name=\"slid\"\r\n          ></input>\r\n          <label className=\"close\" htmlFor=\"close\">\r\n            <AiOutlineCloseCircle></AiOutlineCloseCircle>\r\n          </label>\r\n\r\n          <div className=\"right_slide\">\r\n            {selecter === \"man\"\r\n              ? man.map((it) => {\r\n                  return <p key={it.id}>{it.name}</p>;\r\n                })\r\n              : woman.map((it) => {\r\n                  return <p key={it.id}>{it.name}</p>;\r\n                })}\r\n          </div>\r\n        </div>\r\n        <div className=\"right_icons\">\r\n          <button>\r\n            <svg\r\n              width=\"20\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 25 21\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <rect\r\n                x=\"1\"\r\n                y=\"4.85718\"\r\n                width=\"23\"\r\n                height=\"15.1429\"\r\n                rx=\"2\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"2\"\r\n              />\r\n              <path d=\"M8.10809 7.42857V1H17.5675V7.42857\" stroke=\"white\" />\r\n            </svg>\r\n          </button>\r\n\r\n          <h3>0</h3>\r\n\r\n          <button>\r\n            <svg\r\n              className=\"search_icon\"\r\n              width=\"22\"\r\n              height=\"15\"\r\n              viewBox=\"0 0 29 22\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <circle\r\n                cx=\"10.8843\"\r\n                cy=\"10.3911\"\r\n                r=\"8\"\r\n                transform=\"rotate(9.72591 10.8843 10.3911)\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"2\"\r\n              />\r\n              <line\r\n                y1=\"-1\"\r\n                x2=\"11.1998\"\r\n                y2=\"-1\"\r\n                transform=\"matrix(0.818116 0.575053 -0.57002 0.821631 17 15)\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"2\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\old things\\apps\\my-app\\src\\Componant\\StorePage.tsx",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":19},{"ruleId":"36","severity":1,"message":"40","line":1,"column":28,"nodeType":"38","messageId":"39","endLine":1,"endColumn":34},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"@typescript-eslint/no-unused-vars","'LandingPage' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]